////
/// Forms
/// -> Inputs and Textareas
/// -> Radio and checkboxes
/// @group Component - Forms
/// @author Dami√°n Muti
////

@import "forms/input";
@import "forms/radio-checkbox";

///
$msuif-form-gutter: 40px !global;
///
$msuif-form-fixed-label-width: 30% !default;

/// This file contains structure and look&feel for the form element.
/// @param {number} $msuif-form-column-layout [1] - Indicates the amount of columns the form must be split in.
/// @param {string} $msuif-form-style [block] - Specifies how form labels should behave. Accepted values: `inline-block`, `block` or `fixed`.
/// @param {bool} $msuif-form-include-elements [true] - Indicates whether to include styles for all form components or not.
/// @example scss - Using the mixin
///   form {
///     @include form(1, block, true);
///   }
/// @example markup - Using **input** fields.
///   <div class="input-holder">
///     <label for="field">Elements's label</label>
///     <input type="text" id="field">
///   </div>
/// @example markup - Using **checkbox** and **radio** fields. **Note:** for multiple fields, use the same input holder.
///   <div class="input-holder">
///     <input type="checkbox" id="field">
///     <label for="field">Elements's label</label>
///
///     <input type="checkbox" id="field1">
///     <label for="field1">Elements's label</label
///   </div>
/// @example markup - Using **select** fields.
///   <div class="input-holder">
///     <label for="field">Elements's label</label>
///     <select id="field">
///       <option value="">Option 1</option>
///       <option value="">Option 2</option>
///       <option value="">Option 3</option>
///     </select>
///     <span class="select-caret"></span>
///   </div>

@mixin form($msuif-form-column-layout: 1, $msuif-form-style: block, $msuif-form-include-elements: true) {
  @if type-of($msuif-form-column-layout) != number {
    @error "Form column layout must be a quantity value. E.g: `1`.";
  }
  @if not index(inline-block block fixed, $msuif-form-style) {
    @error "Form style must be either `block`, `inline-block` or `fixed`.";
  }
   @if type-of($msuif-form-include-elements) != bool {
    @error "Include form elements must be either `true` or `false`.";
  }

  // If true, include logic and look&feel for other form components
  @if $msuif-form-include-elements {
    @include form-radio-checkbox(checkbox, inline-block, red, green, blue);
    @include form-input();
  }

  // Layout for each container
  .input-holder {
    @include span(1/$msuif-form-column-layout, $cycle: $msuif-form-column-layout);

    position: relative;
    margin-bottom: #{($msuif-input-height/2)};

    // Control the padding of columns
    @if $msuif-form-column-layout > 1 {
      padding-left: $msuif-form-gutter/2;
      padding-right: $msuif-form-gutter/2;

      &:nth-of-type(#{$msuif-form-column-layout}n + 1) {
        padding-left: 0;
        padding-right: $msuif-form-gutter/2;
      }

      &:nth-of-type(#{$msuif-form-column-layout}n + #{$msuif-form-column-layout}) {
        padding-left: $msuif-form-gutter/2;
        padding-right: 0;
      }

      input[type="checkbox"],
      input[type="radio"] {
        &:first-child {
          margin: 0 0 0 $msuif-form-fixed-label-width;
          padding-bottom: $msuif-input-padding;
        }
      }
    }
    @else {
      input:first-child + label {
        margin-left: $msuif-form-fixed-label-width;
      }
    }

    @if $msuif-form-style == fixed {
      @if $msuif-form-include-elements {
        @if $msuif-form-column-layout > 1 {
          > input + label {
            margin: 0 0 0 $msuif-form-fixed-label-width;
            padding-bottom: $msuif-input-padding;
          }
        }
        @else {
          > input:first-child + label {
            margin-left: $msuif-form-fixed-label-width;
          }
        }
      }
      @else {
        @if $msuif-form-column-layout > 1 {
          input,
          label {
            float: left;
          }
          > input + label {
            display: block;
            width: calc(70% - 20px);
          }
        }
      }
    }

    label {
      font-weight: $msuif-font-weight-bold;

      @if $msuif-form-style == fixed or $msuif-form-style == inline-block {
        display: inline-block;
        vertical-align: top;
      }

      @if $msuif-form-style == fixed {
        &:first-child {
          float: left;
          width: $msuif-form-fixed-label-width;
          text-align: right;
        }
      }

      @if $msuif-form-include-elements {
        @if $msuif-form-style == inline-block {
          padding-right: #{($msuif-input-height/4)};
          line-height: $msuif-input-height;
        }

        @if $msuif-form-style == block {
          display: block;
          max-width: 100%;
          padding-bottom: $msuif-input-padding;
        }

        @if $msuif-form-style == fixed or $msuif-form-style == inline-block {
          display: inline-block;
          padding-right: #{($msuif-input-height/4)};
          vertical-align: top;
          line-height: $msuif-input-height;
        }
        @else {
          display: block;
        }
      }
    }

    input:not([type="radio"]):not([type="checkbox"]):not([type="submit"]):not([type="reset"]),
    textarea,
    select {
      @if $msuif-form-style == block or $msuif-form-style == inline-block {
        display: $msuif-form-style;
      }
      @else {
        display: inline-block;
        width: 70%;
      }

      @if $msuif-form-style == block {
        width: 100%;
      }
    }
  }
}

form {
  @include form(2, fixed, false);
}